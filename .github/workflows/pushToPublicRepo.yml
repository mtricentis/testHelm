# This is a basic workflow that is manually triggered

name: PushToPublicRepo

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
  # Inputs the workflow accepts.
    inputs:
      helmChartVersion:
        description: 'Please provide Helm Chart Version'
        default: '1.0'
        required: true
      qtestVersion:
        description: 'Please provide qtest Manager Version'
        default: '10.5.2'
        required: true
      branchName:
        description: 'Please provide branch name that needs to be committed to public repo'
        default: newBranch
        required: true
    
  
    

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    #container: pandoc/latex
    steps:
      - name: get latest release with tag
        id: latestrelease
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ secrets.USERNAME }}
          #GITHUB_REPO: testHelm
        run: |
        
          #wget http://security.ubuntu.com/ubuntu/pool/main/a/apt/apt_2.3.9_i386.deb
          #ar x apt_2.3.9_i386.deb
          #dpkg -i apt_2.3.9_i386.deb
          #sudo apt-get install jq
          
          echo "::set-output name=releasetag::$(curl -s https://api.github.com/repos/mtricentis/testHelm/releases/latest | jq '.tag_name' | sed 's/\"//g')"
      - name: confirm release tag
        run: |
          echo ${{ steps.latestrelease.outputs.releasetag }}
    
      - name: tagcheckout
        uses: actions/checkout@v2
        #with:
        #  ref: ${{ steps.latestrelease.outputs.releasetag }}
          
        #- uses: actions/checkout@v2
        #- name: Checkout branch
        #run: |
          
         # ls -l
     # - name: checks installation pandoc
     #   run: |
     #     which pandoc
      - name: push directory
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_GITHUB_TOKEN }}
          LATEST_RELEASE: ${{ steps.latestrelease.outputs.releasetag }}
        run: |
          cwd=$(pwd)
          echo $cwd
          
          chmod 777 *
          ls -ltr
          remoteRepo=${{ inputs.name }}
          echo $remoteRepo
          #sh ./push-to-another-git.sh /home/work/testHelm/testHelm mtricentis qtestChart 1.1
          #./repotag.sh $cwd mtricentis qtestChart ${{ env.LATEST_RELEASE }}
          chmod 777 ./.github/scripts/pushToPublicRepo.sh
          #git add entrypoint.sh
          #git commit
          ./.github/scripts/pushToPublicRepo.sh $cwd ${{ secrets.USERNAME }} ${{ github.event.inputs.branchName }} ${{ github.event.inputs.helmChartVersion }} ${{ github.event.inputs.qtestVersion }}
          #sh ./push.sh
        
