# This is a basic workflow that is manually triggered

name: qTestManualPushToPublicRepo

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
  # Inputs the workflow accepts.
    inputs:
      branchName:
        description: 'Please provide branch name that needs to be committed to public repo'
        default: newBranch
        required: true
      qTestHelmVersion:
        description: 'Please provide Helm Chart Version'
        default: '1.0'
        required: true
      qtestAppVersion:
        description: 'Please provide qtest Manager Version'
        default: '10.5.2'
        required: true
      

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: get latest release with tag
        id: latestrelease
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ secrets.USERNAME }}
          #GITHUB_REPO: testHelm
        run: |
          echo "::set-output name=releasetag::$(curl -s https://api.github.com/repos/mtricentis/testHelm/releases/latest | jq '.tag_name' | sed 's/\"//g')"
          
      - name: confirm release tag
        run: |
          echo ${{ steps.latestrelease.outputs.releasetag }}
    
      - name: tagcheckout
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.latestrelease.outputs.releasetag }}
      
      - name: push directory
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ secrets.USERNAME }}
          LATEST_RELEASE: ${{ steps.latestrelease.outputs.releasetag }}
        run: |
          cwd=$(pwd)
          echo $cwd
          echo ${{ env.LATEST_RELEASE }}
          chmod 777 *
          chmod 777 ./.github/scripts/qTestPushToPublicRepo.sh
          ./.github/scripts/qtest.sh $cwd ${{ env.GITHUB_USERNAME }}  ${{ github.event.inputs.branchName }} ${{ github.event.inputs.qTestHelmVersion }} ${{ github.event.inputs.qtestAppVersion }}
